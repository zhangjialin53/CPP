类和对象的使用-2-学生信息库修改
时间限制	1000ms	空间限制	256MB

类和对象的使用-2-学生信息库修改
定义一个学生（Student）对象，对象属性包括学生名字、学号、语文成绩、数学成绩、英语成绩、平均成绩。其中，定义一个函数计算得出平均成绩。

定义一个函数修改学生的成绩，输入提示1代表语文成绩，2代表数学成绩，3代表英语成绩。

定义一个函数输出学生的信息.

TO-DO
注意：

每个学生的信息从键盘读入。
平均成绩也要更新。
输入数据说明
输入一个个数m，表示学生个数。
输入 1 行，每行 5 个值， 分别是 1 个字符和 4 个整数，分别代表每个学生的名字、学号、语文成绩、数学成绩和英语成绩，中间用空格分隔开。
在输出学生信息后，输入修改科目成绩个数n，n的范围为1~3。
在之后的n行里，每行 2 个值，2 个整数，分别代表每个学生的修改科目“1/2/3”和修改后的成绩，中间用空格分隔开。例如修改语文成绩为89分，则输入“1 89”
不需要考虑输入错误，所有整数类型为 int32。
输出格式说明
在学生信息输入之后，先按照给定示例输出学生信息。
在提示修改成绩后，再次按照给定示例输出修改后的学生信息。
程序应给出相应的人性化提示。
样例
输入：

3
marry 2312002 89 67 96
2
1 80
3 99
jerry 2312005 61 79 60 
3
1 59
2 81
3 66
tom 2312001 98 84 88
1
2 90
输出：

==学生信息==
姓名：marry
学号：2312002
====成绩====
语文成绩：80
数学成绩：67
英语成绩：99
平均成绩：82

==学生信息==
姓名：jerry
学号：2312005
====成绩====
语文成绩：59
数学成绩：81
英语成绩：66
平均成绩：68.6667

==学生信息==
姓名：tom
学号：2312001
====成绩====
语文成绩：98
数学成绩：90
英语成绩：88
平均成绩：92


#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

// 定义学生类
class Student {
private:
    string name;      // 学生姓名
    int id;           // 学号
    int chinese;      // 语文成绩
    int math;         // 数学成绩
    int english;      // 英语成绩
    double average;   // 平均成绩

public:
    // 构造函数
    Student(string n, int i, int c, int m, int e) 
        : name(n), id(i), chinese(c), math(m), english(e) {
        average = calculateAverage();  // 计算平均成绩
    }

    // 计算平均成绩的函数
    double calculateAverage() {
        return (chinese + math + english) / 3.0;
    }

    // 修改指定科目的成绩
    void modifyScore(int subject, int newScore) {
        if (subject == 1) {
            chinese = newScore;
        } else if (subject == 2) {
            math = newScore;
        } else if (subject == 3) {
            english = newScore;
        }
        average = calculateAverage();  // 更新平均成绩
    }

    // 输出学生信息的函数
    void printInfo() {
        cout << "==学生信息==" << endl;
        cout << "姓名：" << name << endl;
        cout << "学号：" << id << endl;
        cout << "====成绩====" << endl;
        cout << "语文成绩：" << chinese << endl;
        cout << "数学成绩：" << math << endl;
        cout << "英语成绩：" << english << endl;
        // 输出平均成绩保留4位小数
        cout << "平均成绩：" << fixed << setprecision(4) << average << endl;
        cout << endl;
    }
};

int main() {
    int m;  // 学生个数
    cout << "请输入学生个数: ";
    cin >> m;

    // 动态创建学生数组
    Student** students = new Student*[m];

    // 循环输入每个学生的信息，并修改成绩
    for (int i = 0; i < m; i++) {
        string name;
        int id, chinese, math, english;

        // 输入学生信息
        cout << "请输入第 " << i + 1 << " 个学生的信息 (姓名 学号 语文 数学 英语): ";
        cin >> name >> id >> chinese >> math >> english;
        students[i] = new Student(name, id, chinese, math, english);

        // 输出当前学生信息
        students[i]->printInfo();

        // 输入修改的科目个数
        int n;
        cout << "请输入要修改第 " << i + 1 << " 个学生成绩的科目个数: ";
        cin >> n;

        // 根据n次输入修改成绩
        for (int j = 0; j < n; j++) {
            int subject, newScore;
            cout << "请输入要修改的科目编号和新成绩 (1:语文 2:数学 3:英语): ";
            cin >> subject >> newScore;
            students[i]->modifyScore(subject, newScore);
        }

        // 输出修改后的学生信息
        cout << "修改后的学生信息:\n";
        students[i]->printInfo();
    }

    // 释放内存
    for (int i = 0; i < m; i++) {
        delete students[i];  // 删除每个学生对象
    }
    delete[] students;  // 删除学生对象数组

    return 0;
}
